import { applyMiddleware, compose, createStore } from "redux";
import logger from "redux-logger";
import thunk from "redux-thunk";
import reducers from "./reducers";
//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;
const dev = process.env.NODE_ENV !== "production";
const composeEnhancers =
  (typeof window !== "undefined" &&
    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||
  compose;

const initial = {
  personal_models: [],
  busines_models: [],
  best_deal: null,
  lowest_deal: null,
  error: false,
  models_data: [],
  best_pdeal: null,
  best_bdeal: null,
  modelData: null,
  lowest_bdeal: null,
  lowest_pdeal: null,
  lowest_mdeal: null,
  best_mdeal: null,
  deals: [],
  author: {},
  deal_page: null,
  recomended_deals: [],
  searchResults: {}
};

const init = {
  search: { step: 0, searchQuery: "" },
  dialog: null,
  data: {
    personal_models: [],
    busines_models: [],
    best_deal: null,
    lowest_deal: null,
    error: false,
    models_data: [],
    popular_deals: [],
    best_pdeal: null,
    best_bdeal: null,
    modelData: null,
    lowest_bdeal: null,
    lowest_pdeal: null,
    lowest_mdeal: null,
    best_mdeal: null,
    deals: [],
    deal_page: null,
    recomended_deals: [],
    searchResults: {},
    headingTitle: null,
    headingDescription: null,
    headingDescriptionLong: null,
    Subheading1: null,
    Subheading2: null,
    Subheading3: null,
    published_date: null,
    updated_date: null,
    maincontentsubhead: null,
    subheading: null,
    blogPostSubTitle: null,
    footerHead1: null,
    blogs: [],
    dealsPageSub: null,
    dealsPageHead: null,
    footerHead2: null,
    footerText: null,
    dealPageHead1: null,
    dealPageHead2: null,
    dealPageHead3: null,
    dealPageContent1: null,
    dealPageContent2: null,
    blogMainContent: null,
    blogName: null,
    blogsCount: null,
    mainImage: null,
    tags: null,
    dealPageContent3: null,
    brandsubheading: null,
    brandmaincontentsubhead: null,
    brandtextBlock: null,
    textBlock: null,
    meta_twitter_site: null,
    meta_twitter_title: null,
    meta_twitter_description: null,
    meta_og_site_name: null,
    meta_og_type: null,
    meta_description: null,
    meta_og_title: null,
    meta_keywords: null,
    meta_og_description: null,
    blog_meta_twitter_site: null,
    blog_meta_twitter_title: null,
    blog_meta_twitter_description: null,
    blog_meta_og_site_name: null,
    blog_meta_og_type: null,
    blog_meta_description: null,
    blog_meta_og_title: null,
    blog_meta_keywords: null,
    blog_meta_og_description: null,
    models_meta_twitter_site: null,
    models_meta_twitter_title: null,
    models_meta_twitter_description: null,
    models_meta_og_site_name: null,
    models_meta_og_type: null,
    models_meta_description: null,
    models_meta_og_title: null,
    models_meta_keywords: null,
    models_meta_og_description: null,
    brands_meta_twitter_site: null,
    brands_meta_twitter_title: null,
    brands_meta_twitter_description: null,
    brands_meta_og_site_name: null,
    brands_meta_og_type: null,
    brands_meta_description: null,
    brands_meta_og_title: null,
    brands_meta_keywords: null,
    brands_meta_og_description: null,
    deals_meta_twitter_site: null,
    deals_meta_twitter_title: null,
    deals_meta_twitter_description: null,
    deals_meta_og_site_name: null,
    deals_meta_og_type: null,
    deals_meta_description: null,
    deals_meta_og_title: null,
    deals_meta_keywords: null,
    deals_meta_og_description: null,
    deals_meta_title: null,
    brands_meta_title: null,
    models_title: null,
    blog_title: null,
    meta_title: null,
    custom_pages: null,
    recomended_deals: {}
  },
  auth: { loggedIn: false, authError: false, error: false, changed: false }
};

export function initializeStore(initialState = init) {
  return createStore(
    reducers,
    initialState,
    composeEnhancers(applyMiddleware(...[thunk, ...(dev ? [logger] : [])]))
  );
}
